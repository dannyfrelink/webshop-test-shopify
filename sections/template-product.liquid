<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<style>
    .swiper-button-prev,
    .swiper-button-next {
        color: black;
        top: auto !important;
        height: 20px;
    }

    .swiper-button-prev::after,
    .swiper-button-next::after {
        font-size: 20px;
    }

    .swiper-pagination {
        bottom: 0 !important;
        left: 50%
    }

    .swiper-pagination-bullet-active {
        background-color: black !important;
    }
</style>

<div class="max-w-6xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
        <div class="product--medias">
            <div class="hidden md:block">
                {% for media in product.media %}
                    <div class="h-100 overflow-hidden p-2">
                        {% render 'product-media', media: media %}
                    </div>
                {% endfor %}
            </div>

            <div class="md:hidden">
                <div class="swiper">
                    <div class="swiper-wrapper">
                        {% for media in product.media %}
                            <div class="swiper-slide">
                                <div class="h-[100vw] overflow-hidden p-2">
                                    {% render 'product-media', media: media %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>

                    <div class="swiper-pagination"></div>

                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
            </div>
        </div>
        <div class="sticky top-5 p-2 h-fit">
            {% form "product", product, id: "product_form", novalidate: "novalidate" %}
                <input type="hidden" name="id" value={{ product.selected_or_first_available_variant.id }}>

                {% for block in section.blocks %}
                    {% case block.type %}
                        {% when "vendor" %}
                            <div class="my-3">
                                <span class="text-xs text-gray-500">{{ product.vendor }}</span>
                            </div>
                        {% when "title" %}
                            <div class="my-3">
                                <h1 class="text-3xl text-gray-900">
                                    {{ product.title }}
                                </h1>
                            </div>
                        {% when "price" %}
                            <div id="price-{{ section.id }}" class="my-3">
                                {% if selected_variant.compare_at_price == blank %}
                                    {% assign compare_at_price = "line-through" %}
                                    <span class="text-base text-gray-500 {{ compare_at_price }}">{{ selected_variant.compare_at_price | money }}</span>
                                {% endif %}
                                <span class="text-lg-text-gray-900">{{ selected_variant.price | money }}</span>
            
                                {% if selected_variant.price < selected_variant.compare_at_price %}
                                    <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">SALE</span>
                                {% endif %}
                            </div>
                        {% when "variant_selector" %}
                            <div class="my-3">
                                {% unless product.has_only_default_variant %}
                                    <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                                        {% for option in product.options_with_values %}
                                            <label for="option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                                            <div class="my-2">
                                                <select 
                                                    class="w-full border py-3 px-3"
                                                    name="options[{{ option.name | escape }}]"
                                                    id="option-{{ section.id }}-{{ forloop.index0 }}"
                                                >
                                                    {% for value in option.values %}
                                                        <option 
                                                            value="{{ value | escape }}"
                                                            {% if option.selected_value == value %}
                                                                selected="selected"
                                                            {% endif %}
                                                        >
                                                            {{ value }}
                                                        </option>
                                                    {% endfor %}
                                                </select>
                                            </div>

                                            <script type="application/json">
                                                {{ product.variants | json }}
                                            </script>
                                        {% endfor %}
                                    </variant-selector>
                                {% endunless %}
                            </div>
                        {% when "quantity" %}
                            <div class="my-3">
                                <label for="quantity-{{ section.id }}">Quantity</label>
                                <div class="my-2">
                                    <input class="w-full border px-3 py-3" type="number" name="quantity" id="quantity-{{ section.id }}" value="1" min="1">
                                </div>
                            </div>
                        {% when "description" %}
                            <div class="my-3">
                                {{ product.description }}
                            </div>
                        {% when "checkout_buttons" %}
                            <div class="my-3">
                                <button 
                                    type="submit" 
                                    name="add" 
                                    class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2"
                                    {% if selected_variant.available == false %}
                                        disabled
                                    {% endif %}
                                >
                                    {% if selected_variant.available == false %}
                                        Sold out
                                    {% else %}
                                        Add to cart
                                    {% endif %}
                                </button>
                            </div>
                        {% endcase %}
                {% endfor %}
            {% endform %}
        </div>
    </div>
</div>

<script>
    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange);
        }

        onVariantChange() {
            this.getSelectedOptions();
            this.getSelectedVariant();
            
            if(this.currentVariant) {
                this.updateURL();
                this.updateFormID();
                this.updatePrice();
            }
        }

        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll("select"), select => select.value);
            console.log(this.options)
        }

        getVariantJSON() {
            this.variantData = this.variantData || JSON.parse(this.querySelector("[type='application/json']").textContent);
            return this.variantData;
        }

        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find(variant => {
                const findings = !variant.options
                    .map((option, index) => this.options[index] === option)
                    .includes(false);

                if(findings) return variant
            });

            console.log(this.currentVariant)
        }

        updateURL() {
            if(!this.currentVariant) return;
            window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`)
        }

        updateFormID() {
            const formInput = document.querySelector("#product_form").querySelector("input[name='id']");
            formInput.value = this.currentVariant.id;
        }

        updatePrice() {
            fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
                .then(res => res.text())
                .then(text => {
                    const html = new DOMParser().parseFromString(text, "text/html");
                    const id = `price-${this.dataset.section}`
                    const oldPrice = document.getElementById(id);
                    const newPrice = html.getElementById(id);

                    if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML
                })
        }
    }

    customElements.define("variant-selector", VariantSelector);
</script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        try {
            const swiper = new Swiper(".swiper", {
                direction: "horizontal",
        
                pagination: {
                    el: ".swiper-pagination"
                },
        
                navigation: {
                    prevEl: ".swiper-button-prev",
                    nextEl: ".swiper-button-next"
                }
            });
        } catch(err) {
            console.log("SwiperJS is not defined: ", err);
        }
    });
</script>

{% schema %}
  {
    "name": "Product",
    "blocks": [
      {
        "name": "Vendor",
        "type": "vendor",
        "limit": 1
      },
      {
        "name": "Title",
        "type": "title",
        "limit": 1
      },
      {
        "name": "Price",
        "type": "price",
        "limit": 1
      },
      {
        "name": "Variant Selector",
        "type": "variant_selector",
        "limit": 1
      },
      {
        "name": "Quantity",
        "type": "quantity",
        "limit": 1
      },
      {
        "name": "Description",
        "type": "description",
        "limit": 1
      },
      {
        "name": "Checkout Buttons",
        "type": "checkout_buttons",
        "limit": 1
      }
    ]
  }
{% endschema %}